name: Deploy Python App to AKS with ArgoCD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: yourdockerhubusername/yourappname:latest

    - name: Install ArgoCD CLI
      run: |
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd

    - name: Deploy to AKS Cluster 1
      run: |
        argocd login ${{ secrets.AKS_CLUSTER1_ARGOCD_SERVER }} --username admin --password ${{ secrets.AKS_CLUSTER1_ARGOCD_PASSWORD }} --insecure
        argocd app set yourappname --repo yourrepositoryurl --path yourapppath --dest-server ${{ secrets.AKS_CLUSTER1_SERVER }} --dest-namespace default
        argocd app sync yourappname

    - name: Deploy to AKS Cluster 2
      run: |
        argocd login ${{ secrets.AKS_CLUSTER2_ARGOCD_SERVER }} --username admin --password ${{ secrets.AKS_CLUSTER2_ARGOCD_PASSWORD }} --insecure
        argocd app set yourappname --repo yourrepositoryurl --path yourapppath --dest-server ${{ secrets.AKS_CLUSTER2_SERVER }} --dest-namespace default
        argocd app sync yourappname
